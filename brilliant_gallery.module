<?php
/* $Id$ */


/**
* Display help and module information
* @param section which section of the site we're displaying help
* @return help text for section
*/
function brilliant_galery_help($section='') {

  $output = '';

  switch ($section) {
    case "admin/help#brilliant_galery":
      $output = '<p>'.  t("Creates a fully customizable table gallery of quality-scaled images from a pre-defined folder."). '</p>';
      break;
  }

  return $output;
} // function brilliant_gallery_help


/**
* Valid permissions for this module
* @return array An array of valid permissions for the onthisdate module
*/
function brilliant_gallery_perm() {

return array('access brilliant_gallery'); #, 'administer brilliant_gallery'

} // function brilliant_gallery_perm


/**
* Generate HTML for the Brilliant gallery block
* @param op the operation from the URL
* @param delta offset
* @returns block HTML
*/
function brilliant_gallery_block($op='list', $delta=0) {
  // listing of blocks, such as on the admin/block page
  if ($op == "list") {
    $block[0]["info"] = t("Brilliant gallery");
    return $block;
  } else if ($op == 'view') {
  // our block content
    // content variable that will be returned for display
    $block_content = '';

    #$block_content .= l($links->title, 'node/'.$links->nid) . '<br />';
    #$block_content .= l('vacilando', 'http://www.vacilando.org') . '<br />';

    $block_content .= render_brilliant_gallery();
    
    // set up the block
    $block['subject'] = 'Brilliant gallery';
    $block['content'] = $block_content;
    return $block;
  }
} // end brilliant_gallery_block


function brilliant_gallery_all() {
  // content variable that will be returned for display
  $page_content = '';

  $page_content .= render_brilliant_gallery();

  return $page_content;
}


function brilliant_gallery_admin() {
  $form['brilliant_gallery_folder'] = array(
    '#type' => 'textfield',
    '#title' => t('Path to the gallery folder'),
    '#default_value' => variable_get('brilliant_gallery_folder', 'albums/'),
    '#size' => 50,
    '#maxlength' => 100,
    '#description' => t("Path to the gallery folder relative to your 'files' folder. Exclude trailing trailing slashes. Example: albums/2005_holiday_in_afghanistan")
  );
  $form['brilliant_gallery_maxcol'] = array(
    '#type' => 'textfield',
    '#title' => t('Maximum number of table columns'),
    '#default_value' => variable_get('brilliant_gallery_maxcol', 5),
    '#size' => 2,
    '#maxlength' => 2,
    '#description' => t("The maximum number of columns displayed in the table.")
  );
  $form['brilliant_gallery_maximagewidth'] = array(
    '#type' => 'textfield',
    '#title' => t('Maximum width of table images'),
    '#default_value' => variable_get('brilliant_gallery_maximagewidth', 150),
    '#size' => 3,
    '#maxlength' => 4,
    '#description' => t("The maximum width of thumbnails in the table (height calculated automatically).")
  );
  return system_settings_form($form);
}


function brilliant_gallery_menu() {

  $items = array();

  $items[] = array(
    'path' => 'admin/settings/brilliant_gallery',
    'title' => t('Brilliant gallery'),
    'description' => t('Brilliant gallery module settings'),
    'callback' => 'drupal_get_form',
    'callback arguments' => 'brilliant_gallery_admin',
    'access' => user_access('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
   );

  $items[] = array(
    'path' => 'brilliant_gallery',
    'title' => t('Brilliant gallery'),
    'callback' => 'brilliant_gallery_all',
    'access' => user_access('access brilliant_gallery'),
    'type' => MENU_CALLBACK
  ); # The type MENU_CALLBACK tells Drupal to not display the link in the user's menu, just use this function when the URL is accessed. Use MENU_NORMAL_ITEM if you want the user to see the link in the side navigation block.
     
  return $items;
}


function render_brilliant_gallery() {
        $result = '';
        $defaultgalleryfolder = 'albums/';
        $galleryfolder = variable_get('brilliant_gallery_folder', $defaultgalleryfolder);
        if ( $galleryfolder == '' or substr( $galleryfolder, strlen( $galleryfolder ) - 1, 1 ) == '/' or substr( $galleryfolder, 0, 1 ) == '/' ) {
             #watchdog('error', 'failed to notify "weblogs.com" (site)');
             #form_set_error('yemail', t('Header injection attempt detected.  Do not enter line feed characters into the from field!'));
             return 'Faulty gallery folder path - please fix it in <a href="/admin/settings/brilliant_gallery">here</a>.';
           }
        $imagewidth = variable_get('brilliant_gallery_maximagewidth', 150);
        $columns = variable_get('brilliant_gallery_maxcol', 3);

        $fullresolutionmaxwidth = 1000; # Totally full resolution display would be impractical, so this is the maximum width of "full" resolution.

        $path = file_directory_path() . '/' . $galleryfolder;
        $absolpath = realpath( $path );

        # Load Directory Into Array
          $poct = -1;
          $retval = '';
          $handle = opendir($absolpath);
          while ( $file = readdir($handle) ) {
                  $poct += 1;
                  $testending = strtolower( substr( $file, -4, 4 ) );
                  if (  strtolower( $testending ) <> '.jpg' and strtolower( $testending ) <> 'jpeg' and strtolower( $testending ) <> '.gif' and strtolower( $testending ) <> '.png' and strtolower( $testending ) <> '.mpg' and strtolower( $testending ) <> '.swf' ) { continue; }
                  $retval[$poct] = $file;
                }
          closedir( $handle );
          $maxpoct = count( $retval );
          sort( $retval );
          #print_r( $retval );

        $column_count = 0;
        $pocetobr = 0;
        $result .= '<table BORDER="0" RULES="NONE" FRAME="BOX" cellpadding="0" cellspacing="0" bordercolor="#000000" align="center" style="width:' . $columns*$imagewidth . 'px;">'; #cell-spacing: 5px;
        for ( $poct = 1; $poct <= $maxpoct; $poct++ ) {
               $fullimgpath = '/' . $path . '/' . $retval[$poct-1];
               if ($column_count == 0) { $result .= ('<TR>'); }
               $result .= ('<TD align="center" bgcolor="#000000" style="padding: 3px 3px 0px 3px;vertical-align: middle;">');
                    $pocetobr += 1;
                    if ( substr( strtolower( $retval[$poct-1] ), -4, 4 ) == ".jpg" or substr( strtolower( $retval[$poct-1] ), -5, 5 ) == ".jpeg" or substr( strtolower( $retval[$poct-1] ), -4, 4 ) == ".gif" or substr( strtolower( $retval[$poct-1] ), -4, 4 ) == ".png" ) {
                         $smallenough = false;
                         # Is image horizontally or vertically oriented?
                           $temp = getimagesize( $path . '/' . $retval[$poct-1] );
                           if ( ( $temp[0] - $temp[1] ) >= 0 ) {
                                # this is a horizontal image
                                $imgw = $imagewidth;
                                $imgh = round( ($temp[1]/$temp[0]) * $imagewidth );
                                if ( $temp[0] > $fullresolutionmaxwidth ) {
                                     $imgwbig = $fullresolutionmaxwidth;
                                     $imghbig = round( ($temp[1]/$temp[0]) * $fullresolutionmaxwidth );
                                   } else {
                                     $smallenough = true;
                                   }
                                #$result .= $imgw . ' / ' . $imgh;
                              } else {
                                # this is a vertical image .... a
                                $imgw = round( ($temp[0]/$temp[1])*($temp[0]/$temp[1])*$imagewidth );
                                $imgh = round( ($temp[0]/$temp[1])*$imagewidth );
                                if ( $temp[0] > $fullresolutionmaxwidth ) {
                                     $imgwbig = round( ($temp[0]/$temp[1])*($temp[0]/$temp[1])*$fullresolutionmaxwidth );
                                     $imghbig = round( ($temp[0]/$temp[1])*$fullresolutionmaxwidth );
                                   } else {
                                     $smallenough = true;
                                   }
                                #$result .= $imgw . ' / ' . $imgh;
                              }
                         if ( $smallenough === true ) {
                              $result .= '<a href="' . $fullimgpath . '" rel="lightbox2">';
                            } else {
                              $result .= '<a href="' . '/sites/all/modules/brilliant_gallery/image.php' . '?imgp=' . base64_encode( $path . '/' . $retval[$poct-1] ) . '&imgw=' . $imgwbig . '&imgh=' . $imghbig . '" rel="lightbox2">';
                            }
                         $result .= '<image src="' . '/sites/all/modules/brilliant_gallery/image.php' . '?imgp=' . base64_encode( $path . '/' . $retval[$poct-1] ) . '&imgw=' . $imgw . '&imgh=' . $imgh . '" border="0" width="' . $imgw . '">';
                         $result .= '</a>';

                       } else {
                         $result .= '<A href="' . $fullimgpath . '">';
                         $result .= '<center>' . $retval[$poct-1] . '</center>';
                         $result .= '</A>';

                       }
                    $result .= '</td>';

               $column_count += 1;
               if ($column_count == $columns) { $result .= ("</TR>"); $column_count = 0; }
               }
         if ($column_count <> 0) { $result .= ("</TR>"); }
         if ( $loggedin === true ) {
              $result .= '<tr><td colspan="' . $maxpoct . '"><div align="right"><input type="Submit" value="Submit favourite image rating"</div></td></tr>';
            }
         $result .= "</TABLE>"; 
         return $result;
   }

?>